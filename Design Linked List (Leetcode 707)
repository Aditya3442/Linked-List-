class ListNode {
    int val;
    ListNode next;
    ListNode(int val) {
        this.val = val;
        this.next = null;
    } 
}
class MyLinkedList {
    ListNode dummy;
    int size;
    public MyLinkedList() {
        dummy = new ListNode(-1);
        size = 0;
    }
    
    public int get(int index) {
        if(index >= size)
           return -1;
        ListNode temp = dummy.next;
        while(index != 0 && temp != null) {
            temp = temp.next;
            index--;
        }
        return temp.val;
    }
    
    public void addAtHead(int val) {
        ListNode newNode = new ListNode(val);
        ListNode temp = dummy.next;
        dummy.next = newNode;
        newNode.next = temp;
        size++;
    }
    
    public void addAtTail(int val) {
        ListNode newNode = new ListNode(val);
        ListNode temp = dummy;
        while(temp.next != null) {
            temp = temp.next;
        }
        temp.next = newNode;
        size++;
    }
    
    public void addAtIndex(int index, int val) {
        if(index > size)
          return;
        ListNode temp = dummy;
        while(index != 0 && temp != null) {
            temp = temp.next;
            index--;
        }
        ListNode ans = new ListNode(val);
        ListNode curr = temp.next;
        temp.next = ans;
        ans.next = curr;

        size++;
    }
    
    public void deleteAtIndex(int index) {
        if(index >= size)
          return;
        ListNode temp = dummy;
        while(index != 0 && temp != null) {
            temp = temp.next;
            index--;
        }
        temp.next = temp.next.next;
        size--;
    }
}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */
